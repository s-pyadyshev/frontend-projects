{"version":3,"sources":["utils/utils.js","constants/index.js","components/Form/index.js","components/Loading/index.js","hooks/useImageLoaded.js","components/Image/index.js","hooks/useElementSize.js","components/Gallery/index.js","components/DragAndDrop/index.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["isFileAllowed","extensions","file","includes","name","split","pop","toLowerCase","getFileExtension","isFileAllowedURL","filename","getFileExtensionURL","ALLOWED_IMAGE_FORMATS","ALLOWED_FILE_FORMATS","Form","props","dispatch","useState","textInput","setTextInput","errorData","setErrorData","addImage","imageSrc","img","Image","src","onload","width","height","type","url","ratio","className","onChange","event","target","value","onClick","preventDefault","fetch","then","res","json","data","files","galleryImages","isFileFromURL","fileReader","onloadend","result","addImageToGallery","Loading","useImageLoaded","loaded","setLoaded","ref","useRef","onLoad","useEffect","current","complete","imageWidth","alt","style","useElementSize","elementSize","setElementSize","updateSizeDebounced","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","offsetWidth","offsetHeight","window","addEventListener","removeEventListener","Gallery","storeImages","resizedImages","setResizedImages","elemSize","elemRef","CONTAINER_WIDTH","MIN_HEIGHT","widthSum","currentRow","forEach","index","images","push","updatedCurrentRow","map","image","newHeight","length","key","DragAndDrop","children","inDropZone","onDrop","stopPropagation","dataTransfer","FileReader","content","JSON","parse","readAsText","readAsDataURL","onabort","alert","onerror","clearData","dropDepth","handleDrop","onDragOver","dropEffect","handleDragOver","onDragEnter","handleDragEnter","onDragLeave","handleDragLeave","reducer","state","action","fileList","filter","App","React","useReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a73189ee.chunk.js","sourcesContent":["export const getFileExtension = (file) =>\n  file.name.split(\".\").pop().toLowerCase();\n\nexport const getFileExtensionURL = (filename) =>\n  filename.split(\".\").pop().toLowerCase();\n\nexport const isFileAllowed = (extensions, file) =>\n  extensions.includes(getFileExtension(file));\n\nexport const isFileAllowedURL = (extensions, filename) =>\n  extensions.includes(getFileExtensionURL(filename));\n\nexport const getImageMeta = (url) => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.src = url;\n    img.onload = () => {\n      const { src, width, height } = this;\n      resolve({ src, width, height });\n    };\n  });\n};\n\nexport function debounce(func, wait, immediate) {\n  let timeout;\n\n  return function () {\n    let context = this;\n    let args = arguments;\n\n    let later = function () {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    let callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n","export const ALLOWED_IMAGE_FORMATS = [\"jpg\", \"jpeg\", \"png\"];\n\nexport const ALLOWED_FILE_FORMATS = [\"json\"];\n","import React, { useState } from \"react\";\nimport { isFileAllowedURL } from \"../../utils/utils\";\nimport { ALLOWED_FILE_FORMATS, ALLOWED_IMAGE_FORMATS } from \"../../constants\";\nimport \"./style.scss\";\n\nconst Form = (props) => {\n  const { dispatch } = props;\n  const [textInput, setTextInput] = useState(\"\");\n  const [errorData, setErrorData] = useState(\"\");\n\n  let fileReader;\n\n  const handleInputText = (event) => {\n    setTextInput(event.target.value);\n  };\n\n  const addJsonURLToGallery = (url) => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({\n          type: \"ADD_JSON_TO_LIST\",\n          files: data.galleryImages,\n        });\n      })\n      .then(() => setErrorData(\"\"));\n  };\n\n  const addImage = (imageSrc) => {\n    let img = new Image();\n    img.src = imageSrc;\n\n    let file = {};\n    img.onload = function () {\n      const { src, width, height } = img;\n      file = {\n        url: src,\n        width: width,\n        height: height,\n        ratio: width / height,\n      };\n\n      dispatch({ type: \"ADD_FILE_TO_LIST\", file });\n      setErrorData(\"\");\n    };\n  };\n\n  const addImageToGallery = (event, isFileFromURL) => {\n    if (isFileFromURL) {\n      return addImage(event); // URL string\n    }\n    fileReader.onloadend = () => addImage(event.target.result);\n  };\n\n  const handleFileAdd = (event) => {\n    event.preventDefault();\n    if (isFileAllowedURL(ALLOWED_FILE_FORMATS, textInput)) {\n      addJsonURLToGallery(textInput, true);\n      setTextInput(\"\");\n    } else if (isFileAllowedURL(ALLOWED_IMAGE_FORMATS, textInput)) {\n      addImageToGallery(textInput, true);\n      setTextInput(\"\");\n    } else {\n      setErrorData(\"Invalid url or file type is not allowed\");\n    }\n  };\n\n  return (\n    <form className=\"form\">\n      <div className=\"control\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          onChange={handleInputText}\n          value={textInput}\n        />\n\n        <div className=\"control__error color-error\">{errorData}</div>\n      </div>\n      <button className=\"button\" onClick={handleFileAdd}>\n        Upload file (JSON or Image)\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst Loading = () => {\n  return (\n    <div className=\"lds-spinner\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import { useState, useEffect, useRef } from \"react\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = () => {\n    setLoaded(true);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad();\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nexport default useImageLoaded;\n","import React from \"react\";\nimport Loading from \"../Loading\";\nimport \"./style.scss\";\nimport useImageLoaded from \"../../hooks/useImageLoaded\";\n\nconst Image = (props) => {\n  const { url, width, height, imageWidth } = props;\n  const [ref, loaded, onLoad] = useImageLoaded();\n\n  return (\n    <>\n      <img\n        src={url}\n        width={width}\n        height={height}\n        alt=\".some alt text\"\n        ref={ref}\n        onLoad={onLoad}\n      />\n      {!loaded ? (\n        <div\n          className=\"image-loader\"\n          style={{ width: imageWidth, height: height }}\n        >\n          <Loading />\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Image;\n","import { useState, useEffect, useRef } from \"react\";\nimport { debounce } from \"./../utils/utils\";\n\nfunction useElementSize() {\n  const ref = useRef(null);\n  const [elementSize, setElementSize] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    const updateSize = () => {\n      setElementSize({\n        width: ref.current.offsetWidth,\n        height: ref.current.offsetHeight,\n      });\n    };\n\n    const updateSizeDebounced = debounce(updateSize, 250);\n\n    window.addEventListener(\"resize\", updateSizeDebounced);\n\n    updateSizeDebounced();\n\n    return () => window.removeEventListener(\"resize\", updateSizeDebounced);\n  }, []);\n\n  return [elementSize, ref];\n}\n\nexport default useElementSize;\n","import React, { useState, useEffect } from \"react\";\nimport Image from \"../Image\";\nimport \"./style.scss\";\nimport useElementSize from \"../../hooks/useElementSize\";\n\nconst Gallery = (props) => {\n  const { storeImages, dispatch } = props;\n  const [resizedImages, setResizedImages] = useState(storeImages);\n  const [elemSize, elemRef] = useElementSize(0);\n\n  let CONTAINER_WIDTH = elemSize.width;\n  let MIN_HEIGHT = 200;\n\n  if (elemSize.width < CONTAINER_WIDTH) {\n    CONTAINER_WIDTH = elemSize.width;\n    MIN_HEIGHT = 100;\n  } else if (elemSize.width < 640) {\n    MIN_HEIGHT = 300;\n  }\n\n  // remove image\n  const handleImageDelete = (imageIndex) => {\n    dispatch({\n      type: \"REMOVE_IMAGE\",\n      index: imageIndex,\n    });\n  };\n\n  useEffect(() => {\n    let resizedImages = [];\n    let widthSum = 0;\n    let currentRow = [];\n\n    storeImages.forEach(({ width, height, ratio, url }, index, images) => {\n      currentRow.push({\n        width,\n        height,\n        ratio,\n        url,\n      });\n\n      widthSum += MIN_HEIGHT * ratio;\n\n      // new row\n      if (widthSum > CONTAINER_WIDTH) {\n        const updatedCurrentRow = currentRow.map((image) => {\n          const widthSumPercent = widthSum / 100;\n          const percentageDiff = (widthSum - CONTAINER_WIDTH) / widthSumPercent;\n\n          const newHeight = MIN_HEIGHT - MIN_HEIGHT * (percentageDiff / 100);\n\n          return {\n            ...image,\n            height: newHeight,\n            width: newHeight * image.ratio,\n          };\n        });\n\n        resizedImages = [...resizedImages, ...updatedCurrentRow];\n        currentRow = [];\n        widthSum = 0;\n        // last row\n      } else if (index === images.length - 1 && widthSum < CONTAINER_WIDTH) {\n        const updatedCurrentRow = currentRow.map((image) => {\n          return {\n            ...image,\n            height: MIN_HEIGHT,\n            width: MIN_HEIGHT * image.ratio,\n          };\n        });\n\n        resizedImages = [...resizedImages, ...updatedCurrentRow];\n        currentRow = [];\n        widthSum = 0;\n      }\n    });\n\n    setResizedImages(resizedImages);\n  }, [storeImages, elemSize]);\n\n  const renderImages = () => {\n    return resizedImages.map((image, index) => {\n      return (\n        <li\n          key={index}\n          className=\"gallery__item\"\n          style={{\n            width: image.width,\n            height: image.height,\n          }}\n        >\n          <Image url={image.url} />\n          <button\n            className=\"gallery__item-remove\"\n            onClick={() => handleImageDelete(index)}\n          >\n            Remove\n          </button>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div className=\"gallery\" ref={elemRef}>\n      <ul className=\"gallery__list\">{renderImages()}</ul>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\r\nimport { isFileAllowed } from \"../../utils/utils\";\r\nimport { ALLOWED_FILE_FORMATS, ALLOWED_IMAGE_FORMATS } from \"../../constants\";\r\nimport \"./style.scss\";\r\n\r\nconst DragAndDrop = (props) => {\r\n  const { data, dispatch, children } = props;\r\n\r\n  const handleDragEnter = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    dispatch({ type: \"SET_DROP_DEPTH\", dropDepth: data.dropDepth + 1 });\r\n  };\r\n\r\n  const handleDragLeave = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    dispatch({ type: \"SET_DROP_DEPTH\", dropDepth: data.dropDepth - 1 });\r\n\r\n    if (data.dropDepth > 0) return;\r\n\r\n    dispatch({ type: \"SET_IN_DROP_ZONE\", inDropZone: false });\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    event.dataTransfer.dropEffect = \"copy\";\r\n\r\n    dispatch({ type: \"SET_IN_DROP_ZONE\", inDropZone: true });\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // current selected or moving file\r\n    const file = [...event.dataTransfer.files][0];\r\n    let fileReader = new FileReader();\r\n\r\n    if (isFileAllowed(ALLOWED_FILE_FORMATS, file)) {\r\n      let fileReader;\r\n      fileReader = new FileReader();\r\n      fileReader.onloadend = () => {\r\n        const content = JSON.parse(fileReader.result).galleryImages;\r\n\r\n        dispatch({\r\n          type: \"ADD_JSON_TO_LIST\",\r\n          files: content,\r\n        });\r\n      };\r\n      fileReader.readAsText(file);\r\n    }\r\n\r\n    if (isFileAllowed(ALLOWED_IMAGE_FORMATS, file)) {\r\n      let img = new Image();\r\n      // Read file as Data URL - convert image to base64\r\n      fileReader.readAsDataURL(file);\r\n\r\n      fileReader.onload = () => {\r\n        img.src = fileReader.result;\r\n        let file = {};\r\n        img.onload = function () {\r\n          const { src, width, height } = img;\r\n          file = {\r\n            url: src,\r\n            width: width,\r\n            height: height,\r\n            ratio: width / height,\r\n          };\r\n\r\n          dispatch({ type: \"ADD_FILE_TO_LIST\", file });\r\n        };\r\n      };\r\n    }\r\n\r\n    fileReader.onabort = () => {\r\n      alert(\"Reading aborted\");\r\n    };\r\n\r\n    fileReader.onerror = () => {\r\n      alert(\"Reading error\");\r\n    };\r\n\r\n    event.dataTransfer.clearData();\r\n\r\n    dispatch({\r\n      type: \"SET_DROP_DEPTH\",\r\n      dropDepth: 0,\r\n    });\r\n\r\n    dispatch({\r\n      type: \"SET_IN_DROP_ZONE\",\r\n      inDropZone: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        data.inDropZone ? \"drag-drop-zone inside-drag-area\" : \"drag-drop-zone\"\r\n      }\r\n      onDrop={(event) => handleDrop(event)}\r\n      onDragOver={(event) => handleDragOver(event)}\r\n      onDragEnter={(event) => handleDragEnter(event)}\r\n      onDragLeave={(event) => handleDragLeave(event)}\r\n    >\r\n      <div className=\"drag-drop-zone-label\">\r\n        Drag and drop file (image or json) to upload\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragAndDrop;\r\n","export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_DROP_DEPTH\":\n      return { ...state, dropDepth: action.dropDepth };\n    case \"SET_IN_DROP_ZONE\":\n      return { ...state, inDropZone: action.inDropZone };\n    case \"ADD_FILE_TO_LIST\":\n      return {\n        ...state,\n        fileList: [...state.fileList, action.file],\n      };\n    case \"ADD_JSON_TO_LIST\":\n      const files = action.files.map((file) => ({\n        ...file,\n        ratio: file.width / file.height,\n      }));\n      return {\n        ...state,\n        fileList: [...state.fileList, ...files],\n      };\n    case \"REMOVE_IMAGE\":\n      return {\n        ...state,\n        fileList: [\n          ...state.fileList.filter((image, index) => index !== action.index),\n        ],\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport Form from \"./components/Form\";\nimport Gallery from \"./components/Gallery\";\nimport DragAndDrop from \"./components/DragAndDrop\";\nimport { reducer } from \"./store/store\";\nimport \"./App.scss\";\n\nfunction App() {\n  const [data, dispatch] = React.useReducer(reducer, {\n    dropDepth: 0,\n    inDropZone: false,\n    fileList: [],\n  });\n\n  return (\n    <div className=\"app\">\n      <div className=\"container full-height\">\n        <Form dispatch={dispatch} />\n        <DragAndDrop data={data} dispatch={dispatch}>\n          <Gallery storeImages={data.fileList} dispatch={dispatch} />\n        </DragAndDrop>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}